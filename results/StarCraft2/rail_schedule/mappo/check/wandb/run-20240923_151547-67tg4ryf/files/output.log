observation_space [Box(9,), Box(9,), Box(9,)]
share_observation_space [Box(27,), Box(27,), Box(27,)]
obs_space:  [Box(9,), Box(9,), Box(9,)]
share_obs_space:  [Box(27,), Box(27,), Box(27,)]
act_space:  Discrete(3)
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(107)collect()
-> = self.trainer.policy.get_actions(step_share_obs, step_obs, step_rnn_states,step_rnn_states_critic, step_masks)
array([[[0., 0., 0., ..., 0., 0., 0.]],

       [[0., 0., 0., ..., 0., 0., 0.]],

       [[0., 0., 0., ..., 0., 0., 0.]],

       ...,

       [[0., 0., 0., ..., 0., 0., 0.]],

       [[0., 0., 0., ..., 0., 0., 0.]],

       [[0., 0., 0., ..., 0., 0., 0.]]], dtype=float32)
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(106)collect()
-> value, action, action_log_prob, rnn_states, rnn_states_critic \
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(109)collect()
-> values = np.array(np.split(_t2n(value), self.n_rollout_threads)) # 32 3 1
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(110)collect()
-> actions = np.array(np.split(_t2n(action), self.n_rollout_threads)) # 32 3 1
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(111)collect()
-> action_log_probs = np.array(np.split(_t2n(action_log_prob), self.n_rollout_threads))
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(112)collect()
-> rnn_states = np.array(np.split(_t2n(rnn_states), self.n_rollout_threads))
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(113)collect()
-> rnn_states_critic = np.array(np.split(_t2n(rnn_states_critic), self.n_rollout_threads))
array([[[-1.09096  ],
        [-1.0909568],
        [-1.0906007]],

       [[-1.0929215],
        [-1.0909568],
        [-1.0928228]],

       [[-1.09096  ],
        [-1.112095 ],
        [-1.112559 ]],

       [[-1.09096  ],
        [-1.092921 ],
        [-1.112559 ]],

       [[-1.0929215],
        [-1.0909568],
        [-1.112559 ]],

       [[-1.1120913],
        [-1.0909568],
        [-1.0906007]],

       [[-1.09096  ],
        [-1.112095 ],
        [-1.112559 ]],

       [[-1.1120913],
        [-1.112095 ],
        [-1.0928228]],

       [[-1.1120913],
        [-1.092921 ],
        [-1.112559 ]],

       [[-1.09096  ],
        [-1.092921 ],
        [-1.112559 ]],

       [[-1.0929215],
        [-1.112095 ],
        [-1.112559 ]],

       [[-1.1120913],
        [-1.0909568],
        [-1.112559 ]],

       [[-1.09096  ],
        [-1.112095 ],
        [-1.0906007]],

       [[-1.09096  ],
        [-1.092921 ],
        [-1.0906007]],

       [[-1.1120913],
        [-1.0909568],
        [-1.0928228]],

       [[-1.09096  ],
        [-1.092921 ],
        [-1.0928228]],

       [[-1.09096  ],
        [-1.092921 ],
        [-1.112559 ]],

       [[-1.0929215],
        [-1.092921 ],
        [-1.0906007]],

       [[-1.09096  ],
        [-1.112095 ],
        [-1.112559 ]],

       [[-1.09096  ],
        [-1.112095 ],
        [-1.0928228]],

       [[-1.09096  ],
        [-1.092921 ],
        [-1.0906007]],

       [[-1.09096  ],
        [-1.092921 ],
        [-1.0906007]],

       [[-1.0929215],
        [-1.112095 ],
        [-1.112559 ]],

       [[-1.0929215],
        [-1.092921 ],
        [-1.0928228]],

       [[-1.09096  ],
        [-1.0909568],
        [-1.0928228]],

       [[-1.1120913],
        [-1.112095 ],
        [-1.0906007]],

       [[-1.1120913],
        [-1.0909568],
        [-1.0928228]],

       [[-1.0929215],
        [-1.112095 ],
        [-1.0928228]],

       [[-1.0929215],
        [-1.092921 ],
        [-1.0906007]],

       [[-1.09096  ],
        [-1.092921 ],
        [-1.0928228]],

       [[-1.0929215],
        [-1.112095 ],
        [-1.0906007]],

       [[-1.1120913],
        [-1.112095 ],
        [-1.0928228]]], dtype=float32)
(32, 3, 1)
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(115)collect()
-> if self.envs.action_space.__class__.__name__ == 'MultiDiscrete':
(32, 3, 1, 64)
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(122)collect()
-> elif self.envs.action_space.__class__.__name__ == 'Discrete':
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(123)collect()
-> actions_env = np.squeeze(np.eye(self.envs.action_space.n)[actions], 2)
*** NameError: name 'action_env' is not defined
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(127)collect()
-> return values, actions, action_log_probs, rnn_states, rnn_states_critic, actions_env
array([[[0., 0., 1.],
        [0., 0., 1.],
        [0., 0., 1.]],

       [[0., 1., 0.],
        [0., 0., 1.],
        [0., 1., 0.]],

       [[0., 0., 1.],
        [1., 0., 0.],
        [1., 0., 0.]],

       [[0., 0., 1.],
        [0., 1., 0.],
        [1., 0., 0.]],

       [[0., 1., 0.],
        [0., 0., 1.],
        [1., 0., 0.]],

       [[1., 0., 0.],
        [0., 0., 1.],
        [0., 0., 1.]],

       [[0., 0., 1.],
        [1., 0., 0.],
        [1., 0., 0.]],

       [[1., 0., 0.],
        [1., 0., 0.],
        [0., 1., 0.]],

       [[1., 0., 0.],
        [0., 1., 0.],
        [1., 0., 0.]],

       [[0., 0., 1.],
        [0., 1., 0.],
        [1., 0., 0.]],

       [[0., 1., 0.],
        [1., 0., 0.],
        [1., 0., 0.]],

       [[1., 0., 0.],
        [0., 0., 1.],
        [1., 0., 0.]],

       [[0., 0., 1.],
        [1., 0., 0.],
        [0., 0., 1.]],

       [[0., 0., 1.],
        [0., 1., 0.],
        [0., 0., 1.]],

       [[1., 0., 0.],
        [0., 0., 1.],
        [0., 1., 0.]],

       [[0., 0., 1.],
        [0., 1., 0.],
        [0., 1., 0.]],

       [[0., 0., 1.],
        [0., 1., 0.],
        [1., 0., 0.]],

       [[0., 1., 0.],
        [0., 1., 0.],
        [0., 0., 1.]],

       [[0., 0., 1.],
        [1., 0., 0.],
        [1., 0., 0.]],

       [[0., 0., 1.],
        [1., 0., 0.],
        [0., 1., 0.]],

       [[0., 0., 1.],
        [0., 1., 0.],
        [0., 0., 1.]],

       [[0., 0., 1.],
        [0., 1., 0.],
        [0., 0., 1.]],

       [[0., 1., 0.],
        [1., 0., 0.],
        [1., 0., 0.]],

       [[0., 1., 0.],
        [0., 1., 0.],
        [0., 1., 0.]],

       [[0., 0., 1.],
        [0., 0., 1.],
        [0., 1., 0.]],

       [[1., 0., 0.],
        [1., 0., 0.],
        [0., 0., 1.]],

       [[1., 0., 0.],
        [0., 0., 1.],
        [0., 1., 0.]],

       [[0., 1., 0.],
        [1., 0., 0.],
        [0., 1., 0.]],

       [[0., 1., 0.],
        [0., 1., 0.],
        [0., 0., 1.]],

       [[0., 0., 1.],
        [0., 1., 0.],
        [0., 1., 0.]],

       [[0., 1., 0.],
        [1., 0., 0.],
        [0., 0., 1.]],

       [[1., 0., 0.],
        [1., 0., 0.],
        [0., 1., 0.]]])
--Return--
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(127)collect()->(array([[[-0.6...dtype=float32), array([[[2],
...        [1]]]), array([[[-1.0...dtype=float32), array([[[[ 0....dtype=float32), array([[[[ 0....dtype=float32), array([[[0., ...0., 1., 0.]]]))
-> return values, actions, action_log_probs, rnn_states, rnn_states_critic, actions_env
--Call--
> /home/chunhuili/anaconda3/envs/transport/lib/python3.8/site-packages/torch/autograd/grad_mode.py(84)__exit__()
-> def __exit__(self, exc_type: Any, exc_value: Any, traceback: Any) -> None:
> /home/chunhuili/anaconda3/envs/transport/lib/python3.8/site-packages/torch/autograd/grad_mode.py(85)__exit__()
-> torch.set_grad_enabled(self.prev)
--Return--
> /home/chunhuili/anaconda3/envs/transport/lib/python3.8/site-packages/torch/autograd/grad_mode.py(85)__exit__()->None
-> torch.set_grad_enabled(self.prev)
--Return--
> /home/chunhuili/anaconda3/envs/transport/lib/python3.8/site-packages/torch/utils/_contextlib.py(116)decorate_context()->(array([[[-0.6...dtype=float32), array([[[2],
...        [1]]]), array([[[-1.0...dtype=float32), array([[[[ 0....dtype=float32), array([[[[ 0....dtype=float32), array([[[0., ...0., 1., 0.]]]))
-> return func(*args, **kwargs)
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(31)run()
-> obs, rewards, dones, infos = self.envs.step(actions_env)
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(33)run()
-> data = obs, rewards, dones, infos, values, actions, action_log_probs, rnn_states, rnn_states_critic
array([[[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [5.0000000e+01, 4.5000000e+02, 0.0000000e+00, 3.0000000e+02,
         3.0000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[6.0000000e+02, 4.0000000e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [6.6666664e+01, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         2.8000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [3.3333332e+01, 4.6666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.8000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [3.3333332e+01, 4.6666666e+02, 0.0000000e+00, 3.0000000e+02,
         3.1000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[6.0000000e+02, 4.0000000e+02, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [3.3333332e+01, 4.6666666e+02, 0.0000000e+00, 3.0000000e+02,
         3.3000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.6666669e+02, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [5.0000000e+01, 4.5000000e+02, 0.0000000e+00, 3.0000000e+02,
         2.5000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [3.3333332e+01, 4.6666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.5000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.6666669e+02, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [6.6666664e+01, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         2.7000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.6666669e+02, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [3.3333332e+01, 4.6666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.4000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [3.3333332e+01, 4.6666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.7000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[6.0000000e+02, 4.0000000e+02, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [3.3333332e+01, 4.6666666e+02, 0.0000000e+00, 3.0000000e+02,
         3.2000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.6666669e+02, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [3.3333332e+01, 4.6666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.9000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [5.0000000e+01, 4.5000000e+02, 0.0000000e+00, 3.0000000e+02,
         2.3000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [5.0000000e+01, 4.5000000e+02, 0.0000000e+00, 3.0000000e+02,
         3.1000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.6666669e+02, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [6.6666664e+01, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         3.2000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [6.6666664e+01, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         2.9000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [3.3333332e+01, 4.6666666e+02, 0.0000000e+00, 3.0000000e+02,
         3.3000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[6.0000000e+02, 4.0000000e+02, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [5.0000000e+01, 4.5000000e+02, 0.0000000e+00, 3.0000000e+02,
         3.4000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [3.3333332e+01, 4.6666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.8000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [6.6666664e+01, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         2.7000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [5.0000000e+01, 4.5000000e+02, 0.0000000e+00, 3.0000000e+02,
         3.1000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [5.0000000e+01, 4.5000000e+02, 0.0000000e+00, 3.0000000e+02,
         2.4000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[6.0000000e+02, 4.0000000e+02, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [3.3333332e+01, 4.6666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.9000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[6.0000000e+02, 4.0000000e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [6.6666664e+01, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         2.7000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         1.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [6.6666664e+01, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         3.2000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.6666669e+02, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [5.0000000e+01, 4.5000000e+02, 0.0000000e+00, 3.0000000e+02,
         2.9000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.6666669e+02, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [6.6666664e+01, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         3.0000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[6.0000000e+02, 4.0000000e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [6.6666664e+01, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         3.2000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[6.0000000e+02, 4.0000000e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [5.0000000e+01, 4.5000000e+02, 0.0000000e+00, 3.0000000e+02,
         2.9000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.8333331e+02, 4.1666666e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [6.6666664e+01, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         2.9000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[6.0000000e+02, 4.0000000e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [5.0000000e+01, 4.5000000e+02, 0.0000000e+00, 3.0000000e+02,
         3.0000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]],

       [[5.6666669e+02, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00],
        [1.0000000e+03, 7.7000000e+03, 0.0000000e+00, 3.0000000e+02,
         2.0000000e+00, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         0.0000000e+00],
        [6.6666664e+01, 4.3333334e+02, 0.0000000e+00, 3.0000000e+02,
         2.8000000e+01, 1.0000000e+00, 7.7000000e+03, 0.0000000e+00,
         1.0000000e+00]]], dtype=float32)
(32, 3, 9)
(32, 3)
(32, 3)
*** AttributeError: 'tuple' object has no attribute 'shape'
({}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {})
array([[False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False],
       [False, False, False]])
array([[-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.],
       [-0., -0., -0.]])
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(36)run()
-> self.insert(data)
> /home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py(25)run()
-> for step in range(self.episode_length):
*** NameError: name 'episode_length' is not defined
200
1562
10000000.0
32
Traceback (most recent call last):
  File "main.py", line 124, in <module>
    main(sys.argv[1:])
  File "main.py", line 109, in main
    runner.run()
  File "/home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py", line 25, in run
    for step in range(self.episode_length):
  File "/home/chunhuili/Transportation/RailEnvironment/MAPPO/runner/rail_runner.py", line 25, in run
    for step in range(self.episode_length):
  File "/home/chunhuili/anaconda3/envs/transport/lib/python3.8/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/home/chunhuili/anaconda3/envs/transport/lib/python3.8/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
